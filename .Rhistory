runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
data <- select(data, SUBREGION , COUNTRY, SEIZURE_DATE, DRUG_NAME, AMOUNT, DRUG_UNIT,
DEPARTURE_COUNTRY, DESTINATION_COUNTRY)
data <- read_xlsx("../data/IDSReport.xlsx", sheet = 6)
setwd("~/Desktop/INFO201/final_project_info_201/Scripts")
data <- read_xlsx("../data/IDSReport.xlsx", sheet = 6)
data <- select(data, SUBREGION , COUNTRY, SEIZURE_DATE, DRUG_NAME, AMOUNT, DRUG_UNIT,
DEPARTURE_COUNTRY, DESTINATION_COUNTRY)
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
selected_subregion <- filter(data, SUBREGION == "Caribbean")
View(selected_subregion)
View(selected_subregion)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("ggplot2")
runApp()
data %>% distinct()
a <- data %>% distinct()
View(a)
a <- data %>% distinct(DRUG_NAME)
b <- distinct(data, DRUG_NAME)
runApp()
runApp()
runApp()
runApp()
list_of_drugType <- distinct(data, DRUG_NAME)
View(list_of_drugType)
runApp()
runApp()
runApp()
runApp()
runApp()
selected_subregion <- filter(data, SUBREGION == "Caribbean")
View(selected_subregion)
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("input$date"2016-01-02))
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("input$date"2016-01-02))
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("2016-01-02"))
View(selected_subregion)
View(selected_date_subregion)
View(selected_subregion)
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("2016-12-19"))
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("2016-12-19"))
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("2016-19-12"))
selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("2016-01-05"))
View(selected_date_subregion)
selected_date_drug_subregion <- filter(selected_date_subregion, DRUG_NAME == "Heroin")
selected_date_drug_subregion <- filter(selected_subregion, DRUG_NAME == "Heroin")
selected_date_drug_subregion <- filter(selected_subregion, DRUG_NAME == "Heroin")
selected_date_drug_subregion <- filter(selected_subregion, DRUG_NAME == "Cocaine")
View(selected_date_drug_subregion)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?shinyjs
runApp()
selected_subregion <- filter(data, SUBREGION == "Caribbean")
#selected_date_subregion <- filter(selected_subregion, as.Date.character(selected_subregion$SEIZURE_DATE, "%y/%m/%d") == as.Date("2016-01-05"))
selected_date_drug_subregion <- filter(selected_subregion, DRUG_NAME == "Cocaine")
drug_type <- group_by(subregion(), DRUG_NAME) %>%
summarise(count = n())
return(selected_date_subregion)
drug_type <- group_by(selected_date_drug_subregion, DRUG_NAME) %>%
summarise(count = n())
View(selected_date_drug_subregion)
ggplot(data=drug_type, aes(x=DRUG_NAME, y=count))  +
stat_summary(geom = "bar",color="red") +
geom_bar(stat="identity", fill = "darkgreen") +
ggtitle(paste("The number of Drug")) +
theme(plot.title = element_text(hjust = 0.5))
runApp()
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
runApp('~/Desktop/INFO201/final_project_info_201/Scripts')
distinct(filter(data, DATE == "2016-01-02"), DRUG_TYPE)
distinct(filter(data, SEIZURE_DATE == "2016-01-02"), DRUG_TYPE)
distinct(filter(data, SEIZURE_DATE == "2016-01-02"), DRUG_TYPE)
filter(data, SEIZURE_DATE == "2016-01-02")
a <- filter(data, SEIZURE_DATE == "2016-01-02")
View(a)
a <- filter(data, SEIZURE_DATE == "2016-01-01")
a <- filter(data, SEIZURE_DATE == "2016-01-05")
a <- filter(data, SEIZURE_DATE == "2016-01-05")
View(a)
a <- filter(data, DRUG_NAME == "Cocaine")
View(a)
a <- filter(data, DRUG_NAME == "2016-01-05","%y/%m/%d")
a <- filter(data, DRUG_NAME == "2016-01-05",%y/%m/%d)
a <- filter(data, SEIZURE_DATE == "2016-01-05", %y/%m/%d)
View(SEIZURE_Date)
View(SEIZURE_DATE)
a <- filter(data, SEIZURE_DATE)
a <- filter(data, DRUG_NAME)
a <- filter(data, DRUG_NAME)
View(data)
View(data$SEIZURE_DATE)
a <- filter(data, SEIZURE_DATE)
a <- filter(data, data$SEIZURE_DATE)
a <- data$SEIZURE_DATE
View(a)
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
runApp('Desktop/INFO201/final_project_info_201/Scripts')
names(match_and_coords) <- c("COUNTRY","LAT_COUNTRY","LNG_COUNTRY")
# loses a few that do not exist in both
match_and_coords <- inner_join(coords, match_table, by = "iso2c") %>% select(country_name, lat, lng)
coords <- read.csv("../data/coords.csv", stringsAsFactors = FALSE)
coords <- read.csv("/data/coords.csv", stringsAsFactors = FALSE)
coords <- read.csv("data/coords.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/INFO201/final_project_info_201/Scripts")
coords <- read.csv("data/coords.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/INFO201/final_project_info_201/Scripts")
setwd("~/Desktop/INFO201/final_project_info_201")
coords <- read.csv("data/coords.csv", stringsAsFactors = FALSE)
View(coords)
names(coords) <- c("iso2c", "lat", "lng", "name")
match_table <- read.csv("../data/country_codes.csv", stringsAsFactors = FALSE)
match_table <- read.csv("data/country_codes.csv", stringsAsFactors = FALSE)
match_table <- select(match_table,country_name,iso2c)
# loses a few that do not exist in both
match_and_coords <- inner_join(coords, match_table, by = "iso2c") %>% select(country_name, lat, lng)
names(match_and_coords) <- c("COUNTRY","LAT_COUNTRY","LNG_COUNTRY")
data <- left_join(data, match_and_coords, by = c("COUNTRY"))
names(match_and_coords) <- c("COUNTRY","LAT_PRODUCING","LNG_PRODUCING")
data <- left_join(data, match_and_coords, by = c("PRODUCING_COUNTRY" = "COUNTRY"))
names(match_and_coords) <- c("COUNTRY","LAT_DEPARTURE","LNG_DEPARTURE")
data <- left_join(data, match_and_coords, by = c("DEPARTURE_COUNTRY" = "COUNTRY"))
names(match_and_coords) <- c("COUNTRY","LAT_DESTINATION","LNG_DESTINATION")
data <- left_join(data, match_and_coords, by = c("DESTINATION_COUNTRY" = "COUNTRY"))
names(match_and_coords) <- c("country", "lat", "long")
coords <- match_and_coords
View(coords)
View(data)
runApp('Scripts')
runApp('Scripts')
runApp('Scripts')
icon <- awesomeIcons(icon = 'flag', iconColor = 'red')
if(val == 0) {
na.omit(df)
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure Country")
} else {
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure and Producing Country")
}
runApp('Scripts')
runApp('Scripts')
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles()
View(coords)
runApp('Scripts')
zoomed_in <- leaflet() %>%
setView(lgn = 33.939110, lat = 67.709953, zoom = 12) %>%
addTiles()
zoomed_in <- leaflet() %>%
setView(lgn = 33.939110, lat = 67.709953, zoom = 12)
zoomed_in %>% addTiles()
zoomed_in <- leaflet() %>%
setView(lgn = 33.939110, lat = 67.709953, zoom = 12)
runApp('Scripts')
runApp('Scripts')
zoomed_in <- leaflet() %>%
setView(lng = 33.939110, lat = 67.709953, zoom = 12)
zoomed_in %>% addTiles()
View(data)
runApp('Scripts')
runApp('Scripts')
runApp('Scripts')
runApp('Scripts')
output$most_region_map <- renderLeaflet({
# test
leaflet(data = coords[1:20,]) %>%
addTiles() %>%
addMarkers(~long, ~lat)
})
leaflet(data = coords[1:20,]) %>%
addTiles() %>%
addMarkers(~long, ~lat)
})
leaflet(data = coords[1:20,]) %>%
addTiles() %>%
addMarkers(~long, ~lat)
leaflet(data = coords[1:20,], setView(lgn = 1.45, lat = 28.1)) %>%
addTiles() %>%
addMarkers(~long, ~lat)
})
leaflet(data = coords[1:20,], setView(lgn = 1.45, lat = 28.1)) %>%
addTiles() %>%
addMarkers(~long, ~lat)
leaflet(data = coords[1:20,], setView(lng = 1.45, lat = 28.1)) %>%
addTiles() %>%
addMarkers(~long, ~lat)
leaflet(data = coords[1:20,], setView(lng = 1.45, lat = 28.1, zoom = 12)) %>%
addTiles() %>%
addMarkers(~long, ~lat)
runApp('Scripts')
leaflet(data = coords[1:20,]) %>%
setView(lng = 1.659626, lat = 28.03389, zoom = 10)
addTiles() %>%
addMarkers(~long, ~lat)
zoomed_in <- leaflet() %>%
setView(lng = 1.659626, lat = 28.03389, zoom = 10)
zoomed_in %>% addTiles()
zoomed_in <- leaflet() %>%
setView(lng = 1.659626, lat = 28.03389, zoom = 10)
zoomed_in <- leaflet() %>%
setView(lng = 1.659626, lat = 28.03389, zoom = 10)
zoomed_in %>% addTiles()
zoomed_in <- leaflet(data = coords[1:20,]) %>%
setView(lng = 1.659626, lat = 28.03389, zoom = 10) %>%
addMarkers(~long, ~lat)
zommed_in %>% addTiles()
zoomed_in <- leaflet(data = coords[1:20,]) %>%
setView(lng = 1.659626, lat = 28.03389, zoom = 10) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
zoomed_in <- leaflet(data = coords[1:20,]) %>%
setView(lng = 25.485830, lat = 42.733883, zoom = 10) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
runApp('Scripts')
View(coords)
View(coords)
View(data)
zoomed_in <- leaflet(data = coords[1:20,]) %>%
setView(lng = -1.023194, lat = 7.946527, zoom = 10) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
runApp('Scripts')
runApp('Scripts')
runApp('Scripts')
runApp('Scripts')
runApp('Scripts')
for(row in 1:nrow(selected_country)) {
if(!is.na(selected_country$PRODUCING_COUNTRY[row]) & selected_country$PRODUCING_COUNTRY[row] != "Unknown") {
coordinates <- filter(location_data, selected_country$PRODUCING_COUNTRY[row] == name)
df[nrow(df)+1,] <- c(coordinates$latitude[1], coordinates$longitude[1])
if (input$country2== selected_country$PRODUCING_COUNTRY[row]) {
val <- 1
}
}
}
icon <- awesomeIcons(icon = 'flag', iconColor = 'red')
if(val == 0) {
na.omit(df)
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure Country")
} else {
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure and Producing Country")
}
drug_data <- read_xlsx("data/IDSReport.xlsx", sheet = 6, col_names = TRUE)
location_data <- read_xlsx("data/Location_longitude_latitude.xlsx", col_names = TRUE)
val <- 0
df <- data.frame(lat=numeric(0), lng=numeric(0), stringsAsFactors=FALSE)
selected_country <- filter(drug_data, input$country2 == COUNTRY)
as.data.frame(selected_country)
coordinates <- filter(location_data, input$country2 == name)
select_lat <- coordinates$latitude[1]
select_lng <- coordinates$longitude[1]
for(row in 1:nrow(selected_country)) {
if(!is.na(selected_country$PRODUCING_COUNTRY[row]) & selected_country$PRODUCING_COUNTRY[row] != "Unknown") {
coordinates <- filter(location_data, selected_country$PRODUCING_COUNTRY[row] == name)
df[nrow(df)+1,] <- c(coordinates$latitude[1], coordinates$longitude[1])
if (input$country2== selected_country$PRODUCING_COUNTRY[row]) {
val <- 1
}
}
}
icon <- awesomeIcons(icon = 'flag', iconColor = 'red')
if(val == 0) {
na.omit(df)
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure Country")
} else {
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure and Producing Country")
}
drug_data <- read_xlsx("data/IDSReport.xlsx", sheet = 6, col_names = TRUE)
location_data <- read_xlsx("data/Location_longitude_latitude.xlsx", col_names = TRUE)
val <- 0
df <- data.frame(lat=numeric(0), lng=numeric(0), stringsAsFactors=FALSE)
selected_country <- filter(drug_data, input$country2 == COUNTRY)
as.data.frame(selected_country)
coordinates <- filter(location_data, input$country2 == name)
select_lat <- coordinates$latitude[1]
select_lng <- coordinates$longitude[1]
for(row in 1:nrow(selected_country)) {
if(!is.na(selected_country$PRODUCING_COUNTRY[row]) & selected_country$PRODUCING_COUNTRY[row] != "Unknown") {
coordinates <- filter(location_data, selected_country$PRODUCING_COUNTRY[row] == name)
df[nrow(df)+1,] <- c(coordinates$latitude[1], coordinates$longitude[1])
if (input$country2== selected_country$PRODUCING_COUNTRY[row]) {
val <- 1
}
}
}
icon <- awesomeIcons(icon = 'flag', iconColor = 'red')
if(val == 0) {
na.omit(df)
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure Country")
} else {
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = select_lng, icon = icon, popup="Seizure and Producing Country")
}
drug_data <- read_xlsx("data/IDSReport.xlsx", sheet = 6, col_names = TRUE)
location_data <- read_xlsx("data/Location_longitude_latitude.xlsx", col_names = TRUE)
val <- 0
df <- data.frame(lat=numeric(0), lng=numeric(0), stringsAsFactors=FALSE)
selected_country <- filter(drug_data, input$country2 == COUNTRY)
as.data.frame(selected_country)
coordinates <- filter(location_data, input$country2 == name)
select_lat <- coordinates$latitude[1]
select_lng <- coordinates$longitude[1]
for(row in 1:nrow(selected_country)) {
if(!is.na(selected_country$PRODUCING_COUNTRY[row]) & selected_country$PRODUCING_COUNTRY[row] != "Unknown") {
coordinates <- filter(location_data, selected_country$PRODUCING_COUNTRY[row] == name)
df[nrow(df)+1,] <- c(coordinates$latitude[1], coordinates$longitude[1])
if (input$country2== selected_country$PRODUCING_COUNTRY[row]) {
val <- 1
}
}
}
icon <- awesomeIcons(icon = 'flag', iconColor = 'red')
if(val == 0) {
na.omit(df)
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = 1.4, icon = icon, popup="Seizure Country")
} else {
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = select_lat, lng = 1.4, icon = icon, popup="Seizure and Producing Country")
}
drug_data <- read_xlsx("data/IDSReport.xlsx", sheet = 6, col_names = TRUE)
location_data <- read_xlsx("data/Location_longitude_latitude.xlsx", col_names = TRUE)
val <- 0
df <- data.frame(lat=numeric(0), lng=numeric(0), stringsAsFactors=FALSE)
selected_country <- filter(drug_data, input$country2 == COUNTRY)
as.data.frame(selected_country)
coordinates <- filter(location_data, input$country2 == name)
select_lat <- coordinates$latitude[1]
select_lng <- coordinates$longitude[1]
for(row in 1:nrow(selected_country)) {
if(!is.na(selected_country$PRODUCING_COUNTRY[row]) & selected_country$PRODUCING_COUNTRY[row] != "Unknown") {
coordinates <- filter(location_data, selected_country$PRODUCING_COUNTRY[row] == name)
df[nrow(df)+1,] <- c(coordinates$latitude[1], coordinates$longitude[1])
if (input$country2== selected_country$PRODUCING_COUNTRY[row]) {
val <- 1
}
}
}
icon <- awesomeIcons(icon = 'flag', iconColor = 'red')
if(val == 0) {
na.omit(df)
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = 2.4, lng = 1.4, icon = icon, popup="Seizure Country")
} else {
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(popup="Producing Country") %>%
addAwesomeMarkers(lat = 2.7, lng = 3.4, icon = icon, popup="Seizure and Producing Country")
}
runApp('Scripts')
runApp('Scripts')
leaflet(data = data[1:100,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
zoomed_in <- leaflet(data = coords[1:20,]) %>%
setView(lng = -1.023194, lat = 7.946527, zoom = 10) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
leaflet(data = data[1:100,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
leaflet(data = data[1:100,]) %>%
addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
###
leaflet(data = data[1:100,]) %>%
addTiles() %>%
addMarkers(~lat, ~long, popup = ~as.character(mag), label = ~as.character(mag))
###
leaflet(data = data[1:100,]) %>%
addTiles() %>%
addMarkers(~long, ~lat)
addMarkers(~long, ~lat)
data(data)
# Show first 20 rows from the `quakes` dataset
leaflet(data = data[1:20,]) %>% addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
leaflet(data = data[1:100,]) %>%
addTiles() %>%
addMarkers(~LAT_COUNTRY, ~LNG_COUNTRY)
View(coords)
zoomed_in <- leaflet(data = coords[1:248,]) %>%
setView(lng = -1.023194, lat = 7.946527, zoom = 10) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
# test
zoomed_in <- leaflet(data = coords[1:248,]) %>%
setView(lng = -1.023194, lat = 7.946527, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
})
zoomed_in <- leaflet(data = coords[1:248,]) %>%
setView(lng = -1.023194, lat = 7.946527, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
# test
zoomed_in <- leaflet(data = coords[1:100,]) %>%
setView(lng = -1.023194, lat = 7.946527, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
View(coords)
zoomed_in <- leaflet(data = coords[1:100,]) %>%
setView(lng = -95.712891, lat = 37.090240, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
zoomed_in <- leaflet(data = coords[1:248,]) %>%
setView(lng = -95.712891, lat = 37.090240, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
zoomed_in <- leaflet(data = coords[1:240,]) %>%
setView(lng = -95.712891, lat = 37.090240, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
zoomed_in <- leaflet(data = coords[1:248,]) %>%
setView(lng = -95.712891, lat = 37.090240, zoom = 8) %>%
addMarkers(~long, ~lat)
zoomed_in %>% addTiles()
View(data)
View(data)
